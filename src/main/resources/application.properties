# DATABASE
#spring.datasource.url=jdbc:mysql://springdb.cgi8p8mnwtrl.us-east-1.rds.amazonaws.com/sbbDB

#로컬 DB
#spring.datasource.url=jdbc:mysql://localhost:3306/namoweb
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.username=root
#spring.datasource.password=1234

#리모트 DB
spring.datasource.url=jdbc:mysql://ls-e81c1890cafd4921134d96391021d960b35b67ef.cvgsncohs3x5.ap-northeast-2.rds.amazonaws.com:3306/sbb
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=dbmasteruser
spring.datasource.password=YiM.3E*Mbg3AwGKQbMk[BLLzPR2KVr06


# JPA
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
#none - 엔티티가 변경되더라도 데이터베이스를 변경하지 않는다.
#update - 엔티티의 변경된 부분만 적용한다.
#validate - 변경사항이 있는지 검사만 한다.
#create - 스프링부트 서버가 시작될때 모두 drop하고 다시 생성한다.
#create-drop - create와 동일하다. 하지만 종료시에도 모두 drop 한다.
#개발 환경에서는 보통 update 모드를 사용하고 운영환경에서는 none 또는 validate 모드를 사용한다.

#파일 한개 당 최대사이즈
spring.servlet.multipart.maxFileSize=20MB
#요청당 최대 파일 크기
spring.servlet.multipart.maxRequestSize=100MB
#상품 이미지 업로드 경로
ImgLocation=/home/ubuntu/sbb/image/
#ImgLocation=c:/bbs/img/
#리소스 업로드 경로
uploadPath=file:///home/ubuntu/sbb/image/
#uploadPath=file:///c:/bbs/img/
#화이트 라벨 오류 페이지를 완전히 비활성화
server.error.whitelabel.enabled=false

spring.profiles.include=oauth

# AWS 마스터 계정 또는 IAMUSER 정보
cloud.aws.credentials.accessKey=AKIASOCO6AM4CBSONBXY
cloud.aws.credentials.secretKey=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
# AWS S3 bucket의 정보
cloud.aws.s3.bucket=bucket-hlo7k8
cloud.aws.region.static=ap-northeast-2

#spring.datasource.validationQuery=SELECT 1
#spring.datasource.testWhileIdle=true
#spring.datasource.timeBetweenEvictionRunsMillis=7200000
#spring.jpa.properties.javax.persistence.sharedCache.mode=ALL
